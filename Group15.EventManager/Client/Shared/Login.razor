@inject IAuthService AuthService
@inject NavigationManager NavManager
@inject AuthStore AuthStore
@inject HttpClient HttpClient

<div class="login">
    <AuthorizeView>
        <Authorizing>
            <text>Processing..</text>
        </Authorizing>
        <Authorized>
            <div>
                <span>Hello, @AuthStore.User.FirstName @AuthStore.User.LastName</span>
                <button class="sign-out" @onclick="@HandleLogout">Sign out</button>
            </div>
        </Authorized>
        <NotAuthorized>
            <button class="btn btn-success" @onclick="@(() => NavManager.NavigateTo("/register"))">Register</button> |
            <button class="sign-in" @onclick="@(() => NavManager.NavigateTo("/login"))">Log in</button>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code{

    protected override void OnInitialized()
    {
        AuthStore.OnLogin += StateHasChanged;
    }

    private async Task HandleLogout()
    {
        await AuthService.Logout();
        NavManager.NavigateTo("/region");
    }
}