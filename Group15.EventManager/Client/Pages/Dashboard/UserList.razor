@inject UserStore UserStore
@inject AttendanceStore AttendanceStore

<div class="userlist-container">
<h3>@UserStatus</h3>
    <ul class="dropzone" ondragover="event.preventDefault()"  @ondrop="HandleDrop">
        @foreach (var user in SignedUpUsers)
         {
            <User user="user"/>
         }
    </ul>
</div>

@code {

    [CascadingParameter]
    public UserContainer UserContainer { get; set; }

    [Parameter]
    public GetSingleEventViewModel Event { get; set; }

    public int UserAmount { get; set; }

    [Parameter]
    public UserStatus UserStatus { get; set; }

    public List<GetUserFromEventViewModel> SignedUpUsers { get; set; } = new List<GetUserFromEventViewModel>();

    protected override void OnParametersSet()
    {
        SignedUpUsers.Clear();
        SignedUpUsers.AddRange(UserContainer.SignedUpUsers.Where(user => user.Status == UserStatus));
    }

    private void HandleDrop()
    {
        UserContainer.UpdateMovedUser(UserStatus);
    }

    private void GatheredUsers()
    {
        var ticketAmount = 0;
        foreach (var user in SignedUpUsers)
        {
            ticketAmount += user.Tickets.Where(t => t.Event.Id == Event.Id).Count();
        }

        UserAmount = SignedUpUsers.Count() + ticketAmount;
    }
}
