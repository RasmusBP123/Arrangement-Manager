@page "/events"
@inherits FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<GetActiveEventsState> EventState
@inject HttpClient HttpClient
@inject EventStore EventStore
@inject NavigationManager NavManager

@if(EventStore.Events != null)
{
    <ul>
        @foreach (var _event in EventStore.Events)
        {
            <li @onclick="@(() => NavigateToEventDetails(_event.Id))">
                <p>@_event.Name</p>
                <p>@_event.Region.Name</p>
                @if (_event.PayOnline == false)
	            {
		            <p>This event can only be bought in the specified store</p>
                }
                else
                {
                    <p>@_event.Price</p>
                }
            </li>
        }
    </ul>
}

@code {

    protected override async Task OnInitializedAsync()
    {
        EventStore.Events = await HttpClient.GetJsonAsync<List<GetEventListViewModel>>("api/events/active");
        EventStore.OnClickedRegion += StateHasChanged;
        //Dispatcher.Dispatch(new GetActiveEventsAction());
    }

    private void NavigateToEventDetails(Guid eventId)
    {
        NavManager.NavigateTo($"/{eventId}/event/details");
    }
}
