@page "/{eventId:guid}/event/details"
@inject HttpClient HttpClient
@inject EventStore EventStore
@inject UserStore UserStore
@inject AuthStore AuthStore

<h3>Event</h3>

<p>@EventStore.Event.Name</p>

<button class="btn btn-success" @onclick="@(() => BookEventForUser(EventStore.Event))">Book event</button>

@code {

    [Parameter]
    public Guid eventId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        EventStore.Event = await HttpClient.GetJsonAsync<GetSingleEventViewModel>($"api/events/{eventId}");
        AuthStore.User = await HttpClient.GetJsonAsync<UserModel>("api/accounts/user");

    }

    private async Task BookEventForUser(GetSingleEventViewModel _event)
    {
        var user = new AddUserToEventViewModel() 
        { 
            Id = AuthStore.User.Id,
            City = AuthStore.User.City,
            Email = AuthStore.User.Email,
            FirstName = AuthStore.User.FirstName,
            LastName = AuthStore.User.LastName,
            Event = EventStore.Event,
        };

        await HttpClient.PostJsonAsync<AddUserToEventViewModel>($"api/user/{eventId}/book/event", user);
    }
}
