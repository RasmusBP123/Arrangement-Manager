@page  "/store/create"
@inject HttpClient HttpClient
@inject RegionStore RegionStore
@inject CityStore CityStore

<h3>Create Store</h3>

<EditForm Model="Store" OnValidSubmit="@SubmitStore">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Choose location</label>
        <LocationsForEvent />
    </div>
    <div class="form-group">
        <label for="name">Name</label>
        <InputText Id="name" class="form-control" @bind-Value="Store.Name" />
        <ValidationMessage For="@(() => Store.Name)" />
    </div>
    <div class="form-group">
        <label for="name">Roadname</label>
        <InputText Id="name" class="form-control" @bind-Value="Address.RoadName" />
        <ValidationMessage For="@(() => Address.RoadName)" />
    </div>
    <div class="form-group">
        <label for="name">RoadNumber</label>
        <InputNumber Id="name" class="form-control" @bind-Value="Address.RoadNumber" />
        <ValidationMessage For="@(() => Address.RoadNumber)" />
    </div>
    <button type="submit" class="btn btn-success">Submit</button>
</EditForm>

@code {

    private CreateStoreViewModel Store = new CreateStoreViewModel();
    private CreateAddressForEventViewModel Address = new CreateAddressForEventViewModel();

    private async Task SubmitStore()
    {
        RegionStore.Region.Cities = null;
        Store.Address = Address;
        Store.Region = RegionStore.Region;
        Store.City = CityStore.City;
        await HttpClient.PostJsonAsync<CreateStoreViewModel>("api/store/create", Store);
    }
}
