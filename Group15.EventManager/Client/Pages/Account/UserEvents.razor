@page "/bookings"
@inject HttpClient HttpClient
@inject EventStore EventStore
@inject AuthStore AuthStore

<h3>Your booked events</h3>

@foreach (var _event in EventStore.BookedEvents)
{
    <p>@_event.Id</p>
    <p>@_event.Name</p>
    <button class="btn btn-danger" @onclick="@(() => CancelEvent(_event.Id))">Cancel booking</button>
}

@code {

    protected Guid userId;
    protected override async Task OnInitializedAsync()
    {
        userId = AuthStore.User.Id;
        EventStore.BookedEvents = await HttpClient.GetJsonAsync<IEnumerable<GetEventListViewModel>>($"api/events/{userId}/events");
    }

    private async Task CancelEvent(Guid eventId)
    {
        try
        {
            await HttpClient.DeleteAsync($"api/user/{userId}/delete/{eventId}/event");
            EventStore.BookedEvents = await HttpClient.GetJsonAsync<IEnumerable<GetEventListViewModel>>($"api/events/{userId}/events");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
}
