@page  "/account"
@inject HttpClient HttpClient
@inject IAuthService AuthService
@inject NavigationManager NavManager
@inject AuthStore AuthStore
@inject IModalService ModalService
@attribute [Authorize(Policy = Policies.IsUser)]

<h3>Din konto</h3>

<div class="account-info">
    <p>Email </p><p> @AuthStore.User.Email</p>
</div>
<div class="account-info">
    <p>Navn </p><p> @AuthStore.User.FirstName @AuthStore.User.LastName</p>
</div>

<div class="flex-row">
    <MatButton Raised="true" @onclick="@ShowChangePasswordModal">Skift kodeord</MatButton>
    <MatButton Raised="true" class="btn btn-danger" @onclick="@(() => DeleteAccount())">delete</MatButton>
</div>

@code {

    public bool PasswordChanged { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            AuthStore.User = await HttpClient.GetJsonAsync<UserModel>("api/accounts/user");
        }
        catch { }
    }

    private async Task DeleteAccount()
    {
        await HttpClient.DeleteAsync("api/accounts/delete");
        await AuthService.Logout();
        NavManager.NavigateTo("/");
    }

    private void ShowChangePasswordModal()
    {
        ModalService.Show<ChangePassword>("Indtast venligst informationen nedenunder");
    }
}
