@inject IJSRuntime JSRuntime
@implements IDisposable 

<div id="@MarkerId" class="map-container">Hello
</div>

@code {

    [Parameter] public double Zoom { get; set; }
    [Parameter] public GetMarkerViewModel Marker { get; set; }
    [Parameter] public GetAddressForEventViewModel AddressModel { get; set; }
    [Parameter] public GetCityViewModel City { get; set; }
    private string MarkerId { get; set; }
    private string Address { get; set; }

    protected override void OnInitialized()
    {
        MarkerId = Guid.NewGuid().ToString();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        Address = $"{AddressModel.RoadName} {AddressModel.RoadNumber}, {City.Name}, Denmark";
        await JSRuntime.InvokeVoidAsync(
            "map.showOrUpdate",
            MarkerId,
            Marker,
            Address,
            Zoom);

        firstRender = false;
    }

    public void Dispose()
    {
        GC.SuppressFinalize(this);
    }
}
